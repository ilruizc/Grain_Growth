2 Arreglos: uno tiempo actual y el otro un paso de tiempo siguiente
1 Clase: Privada- 2 arreglos (N_1xN_1)
Pública-Funciones
Funciones: Función de llenado 1
	Llena con valores aleatorios con igual probabilidad entre 1 y 1000 unos pocos lugares siguiendo una distribución de bernouli con P=0.05. Del arreglo y condición de frontera periodica.
	Busca cada posición diferente de 0 y llena los vecinos de moore con estado 0, con el mismo estado, siguiendo una distribución de llenado de bernoulli con P=0.8. 
	Busca las posiciones que no se llenaron, y las llena con valores aleatorios entre 1 y Q
    Función de regla de evolución (Vecinos de Von Neumann)
	Si 3 de las 4 celdas contiguas tienen el mismo estado, la del centro también lo tendrá: 
		Extraer los valores de orientación de los vecinos en un arreglo considerando casos extremos, y sin considerar últimas fila y columna
		Evaluar 3 posiciones del arreglo:
			-En el caso de que sean todas diferentes, descartar el cambio. 
			-Si al menos 2 son iguales, evaluar el cuarto vecino y decidir el cambio
		En caso contrario, obtener un numero aleatorio con igual probabilidad entre 0 y 1, y según el resultado, asignar a la celda, el estado del vecino correspondiente al valor de probabilidad	
	Si se da cambio en la primera columna o primera fila, cambiar también la última columna y la última fila. (condiciones de frontera periódicas)
	Recorre el arreglo h_old, evolucionando, y sin importar el resultado, lo almacena en h_new
	Finalmente, h_old = h_new 
Función de impresión del arreglo
[#include <fstream>]
void LatticeBoltzmann::Imprimase(const char * NombreArchivo){
  ofstream MiArchivo(NombreArchivo);
  for(int ix=0;ix<Lx;ix+=4){
    for(int iy=0;iy<Ly;iy+=4){
      MiArchivo<<ix<<" "<<iy<<" "<<Ux0/Uventilador*4 << " "<< Uy0/Uventilador*4 <<endl;
    }
    MiArchivo<<endl;
  }
  MiArchivo.close();
}

Nombreclase.Imprimase("Agua-final.dat");

Función que cuente el número de celdas de cada grano
Arreglo de 1000 posiciones que almacena en cada una, el número de celdas con dicha orientación  
Función de métricas
	área de los granos
	área máxima de grano
Función circulito
	Inicializa el arreglo (rellenar el centro)
Main:
	Definir constantes globales:
	Tamaño del arreglo (N_1)
	Tiempo máximo
	Número de estados (Q)
	Crear la clase
	Inicializar los arreglos: Función de llenado y función circulito
	Bucle de evolución temporal
	Función de evolución 
	Condicional de tiempo para impresión 
Imprimir microestructura en T= {200,1000,4000}
                                           Distribución de tamaño normalizado en T = 200
                                           Diámetro promedio de grano en 12 pasos de T = n*10000/20











[✓]* Arreglos: uno tiempo actual, el otro un paso de tiempo siguiente //se omitió el 3er arreglo
[✓] 1 Clase: Privada – 2 arreglos (NxN)
[✓]- Arreglo de enteros, estados de vecinos (24) 
[✓]- Arreglo de temperaturas
[x]- Arreglo de movilidades //se omitio porque se tenia segmentation fault
[✓]- Arreglo de Deltas de Energía
[✓]- Vecto de Delta E_B
Pública-Funciones
Funciones:
	  [✓] -Función de llenado 2
	      	Llena h_old
		Llena Temperature
          [✓] -Función de cálculo de probabilidad
	  [] -Función buscadora de frontera 
		Criterio de frontera: Primeros vecinos de moore con estado diferente al propio
	  [] -Función define y guarda vecinos
		Define correctamente y guarda los vecinos en el arreglo de vecinos
	  [] -Función cálculo de E_B (recibe el arreglo de vecinos)
                3 bucles, 2 para recorrer h_old y 1 para recorrer el arreglo de vecinos
	  [] -Función calculo Delta E
		Recorre el arreglo y obtiene Delta E_B
 		genera el numero aleatorio y calcula Delta E_T
		Calcula Delta E y almacena el valor en el arreglo de Deltas de energía
	  [] -Función de regla de evolución (Segundos vecinos de Moore)
		h_aux=h_old
		Recorre todo el arreglo h_aux. Para cada posición:
			Llama la función buscadora de frontera y revisa si es frontera
			LLama la función define y guarda vecinos
			Para todos los vecinos:
				Llama la función cálculo de E_B Y almacena el valor en una variable EB_i
				Asigna el valor del primer vecino
				Llama la función de calculo de E_B y almacena el valor en otra variable EB_f
				Calcula Delta E_B y almacena el valor en el vector de Delta E_B
				Escoge el minimo de los valores del vector de Delta E_B
				Almacena el estado correspondiente al mínimo de Delta E_B en h_new
			Llama la función calculo de Delta E
		Escoge el valor minimo de Delta E, y pasa por cada posición del arreglo de Delta E, llamando la función de calculo de probabilidad
			si la probabilidad es 1 => h_new[i][j] se mantiene igual
			Si la probabilidad es 0 => h_new[i][j] = h_old[i][j]
		h_old[i][j] = h_new[i][j]
	   [] -Función de impresión del arreglo
	   [] -Función que cuente el número de celdas de cada grano
	   [] -Función de métricas
	área de los granos
	área máxima de grano
Main:
	Definir constantes globales:
	Tamaño del arreglo
	Tiempo máximo
	Crear la clase
	Inicializar los arreglos: Función de llenado y función circulito
	Bucle de evolución temporal
	Función de evolución 
	Condicional de tiempo para impresión 
Imprimir microestructura en T= {200,1000,4000}
                                           Distribución de tamaño normalizado en T = 200
                                           Diámetro promedio de grano en 12 pasos de T = n*10000/20


